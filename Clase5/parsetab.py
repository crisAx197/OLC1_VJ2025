
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSCORDER CORIZQ ID IGUAL INT MAS MENOS NUMERO PTC REVALinit : instrucciones\n    instrucciones : instrucciones instruccion\n| instruccion\ninstruccion : evaluacion\n| asignacion\n| declaracion\nasignacion : ID IGUAL expresion PTC\n    declaracion : INT ID IGUAL expresion PTC\n    evaluacion : REVAL CORIZQ expresion CORDER PTC\n    expresion : NUMERO\n| ID\nexpresion : expresion MAS expresion\n| expresion MENOS expresion\n'
    
_lr_action_items = {'REVAL':([0,2,3,4,5,6,10,22,24,27,],[7,7,-3,-4,-5,-6,-2,-7,-9,-8,]),'ID':([0,2,3,4,5,6,9,10,11,12,18,20,21,22,24,27,],[8,8,-3,-4,-5,-6,13,-2,16,16,16,16,16,-7,-9,-8,]),'INT':([0,2,3,4,5,6,10,22,24,27,],[9,9,-3,-4,-5,-6,-2,-7,-9,-8,]),'$end':([1,2,3,4,5,6,10,22,24,27,],[0,-1,-3,-4,-5,-6,-2,-7,-9,-8,]),'CORIZQ':([7,],[11,]),'IGUAL':([8,13,],[12,18,]),'NUMERO':([11,12,18,20,21,],[15,15,15,15,15,]),'CORDER':([14,15,16,25,26,],[19,-10,-11,-12,-13,]),'MAS':([14,15,16,17,23,25,26,],[20,-10,-11,20,20,-12,-13,]),'MENOS':([14,15,16,17,23,25,26,],[21,-10,-11,21,21,-12,-13,]),'PTC':([15,16,17,19,23,25,26,],[-10,-11,22,24,27,-12,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,10,]),'evaluacion':([0,2,],[4,4,]),'asignacion':([0,2,],[5,5,]),'declaracion':([0,2,],[6,6,]),'expresion':([11,12,18,20,21,],[14,17,23,25,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','parser.py',11),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','parser.py',16),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','parser.py',17),
  ('instruccion -> evaluacion','instruccion',1,'p_instruccion','parser.py',25),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','parser.py',26),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','parser.py',27),
  ('asignacion -> ID IGUAL expresion PTC','asignacion',4,'p_asignacion','parser.py',33),
  ('declaracion -> INT ID IGUAL expresion PTC','declaracion',5,'p_declaracion','parser.py',38),
  ('evaluacion -> REVAL CORIZQ expresion CORDER PTC','evaluacion',5,'p_evaluacion','parser.py',43),
  ('expresion -> NUMERO','expresion',1,'p_expresion_unaria','parser.py',48),
  ('expresion -> ID','expresion',1,'p_expresion_unaria','parser.py',49),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','parser.py',58),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','parser.py',59),
]
